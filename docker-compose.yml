version: "3"
services:
  primary:
    image: mongo:4.4-bionic
    container_name: mongo-primary
    hostname: primary
    command: >
      mongod -f /root/mongod1.conf
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: password
    volumes:
      - ./volumes/mongodb/root:/root:ro # Initialize script
      - ./volumes/mongodb/primary/data/db:/data/db:rw
    ports:
      - 27011:27011
    networks:
      - replset

  secondary:
    image: mongo:4.4-bionic
    container_name: mongo-secondary
    hostname: secondary
    command: >
      mongod -f /root/mongod2.conf
    volumes:
      - ./volumes/mongodb/root:/root:ro # Initialize script
      - ./volumes/mongodb/secondary/data/db:/data/db:rw
    ports:
      - 27012:27012
    depends_on:
      - primary
    networks:
      - replset

  third:
    image: mongo:4.4-bionic
    container_name: mongodb-third
    hostname: third
    command: >
      mongod -f /root/mongod3.conf
    volumes:
      - ./volumes/mongodb/root:/root:ro # Initialize script
      - ./volumes/mongodb/third/data/db:/data/db:rw
    ports:
      - 27013:27013
    networks:
      - replset
    depends_on:
      - primary

#
# Keyfile: ref. https://docs.mongodb.com/manual/tutorial/enforce-keyfile-access-control-in-existing-replica-set/
# openssl rand -base64 756 > ./volumes/mongodb/root/mongod-keyfile
# chmod 400 ./volumes/mongodb/root/mongod-keyfile

networks:
  replset:
    ipam:
      config:
      - subnet: 192.168.1.0/24 # Any
